		ADR		R0, 0x100
		FILL		40
		
		MOV		R7, #2
		MOV		R8, #10
		MOV		R9, #1 ;u(n-1)
		MOV		R10, #1 ;u(n)
		STR		R9, [R0] ; guardar 1 valor da sq.
		STR		R10, [R0, #4] ; guardar 2 valor da sq.
		MOV		R5, #0 ; 0 para compare
		MOV		R6, #4 ; offset para guardar valores
		
calc		SUB		R12, R8, R7 ; calculo de ciclos
		CMP		R12, R5
		BEQ		ec
		MOV		R11, R10 ; z = y
		ADD		R10, R10, R9 ; y = y + x
		MOV		R9, R11 ; x = z
		ADD		R6, R6, #4 ; aumento do offset
		STR		R10, [R0, R6] ; guardar valor calculado
		ADD		R7, R7, #1 ; aumentar ciclos realizados
		B		calc
		
ec		LDR		R1, [R0, #32] ; load de 9 valor
		LDR		R2, [R0, #36] ; load do 10 valor
		LSL		R2, R2, #8 ; 10 valor (55) x 256
		
		MOV		R3, R1
		MOV		R4, #0
soma9	ADD		R3, R3, R1
		ADD		R4, R4, #1
		CMP		R3, R2
		BLE		soma9
		
		LSR		R5, R4, #8 ; 414/256
		STR		R4, [R0, #40]
		STR		R5, [R0, #44]
		
		END
		
		
		
